version: '3.8'

services:
  app:
    build: .
    ports:
      - "8080:8080"
    environment:
      - KAFKA_BROKERS=kafka:9092
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_NAME=wb
      - DB_SSLMODE=disable
      - SERVER_PORT=8080
    depends_on:
      - kafka
      - db
      - redis

  db:
    image: postgres:14
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: wb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d wb"]
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass ozon_top --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "ozon_top", "ping"]
      interval: 5s
      timeout: 1s
      retries: 5
      start_period: 10s
    volumes:
      - redis_data:/data
    environment:
      - REDIS_PASSWORD=ozon_top

  kafka:
    image: bitnami/kafka:3.7.0
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_NUM_PARTITIONS=3
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_CREATE_TOPICS="orders:3:1"
    volumes:
      - kafka_data:/bitnami/kafka
    ports:
      - "9092:9092"
      - "9094:9094"  # Для внешнего подключения

volumes:
  postgres_data:
  redis_data:
  kafka_data: